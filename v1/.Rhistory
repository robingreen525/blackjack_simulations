list.files()
ls()
ls
clear
#Bjorn's porion of Code
{
###########		Values/Settings shared by all experiments	############################
# need to have the following R packages+dependencies installed: plyr, zoo, ggplot2, drc
#	option to plot/calculate replicates individually or averaged
#  don't use R studio, it throws up plotting errors
# Open bioact3 output and make sure all columns are in "number" not "scientific" format
require(zoo); require(plyr); require(ggplot2); require(drc);
################	Experiment 1 	#########################
setup<-NULL #initialize the setup object
# Location of the Km analysis code, make sure the path is correct for YOU (different on different machines)
#for Mac
#setup$code=c("/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/KmAnalysis_v4.0.R")
# for PC
setup$code=c("X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/20150901_KmAnalysis_v4.0.R")
# working directory containing bioact3 output, can be set individually, make sure the path is correct for YOU!
#for Mac
#setup$wd="/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/ExampleData"
#for PC
setup$wd="X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/"
setwd(setup$wd)
# nutrient being used (shows up in graphs & file names)
setup$nutr="Met"
# length of prestarvation (shows up in graphs & file names)
setup$prestarve="3hPrestarve"
# number of timepoints used for linear model window
setup$n=4
# fraction of maximum intensity for which to consider using the data, currently only used for "individual" or fixed window methods
setup$p=1.0
# Options:
#	"maximum" finds maximum growth rate,
#	"individual" finds lowest residual window for each strain/conc combo,
#	"overall" finds window with lowest residuals for all strains at a given concentration (makes sure growth rate is predicted in the same time window.
#	If you set method to number 5, all windows start at that time-point with length n
setup$method="maximum"
#set of high contrast color pairs (maximum of 12), Colors will be assigned to strains in the order listed (e.g. WY2218 will be chartreuse2)
setup$colors=c("salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1","deeppink3","grey48","black","darkorange","darkorange3",'darkred','orange','navyblue','darkgreen',"salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1")
setup$cellsperwell=1000 #not actually used in the code but gets stored with all the other settings
setup$microscope="broadway" #  shows up in graphs and filenames
setup$date="20150901" #shows up in graphs and filenames
setup$infile="./bioact_results.txt" # tab delimited bioact3 textfile (code looks for columns labeled "position","slice","min.elapsed","expTcorr_bs_intden") Open in excel once to chance all values from scientific to numbers.
# Or read it in from a tab delimited text file in the working directory with columns position, strain, conc, & rep
# strains will be plotted in the order listed here
setup$lookup<-read.delim("./20150901_lookup.txt")
# Make sure your lookup table is correct before proceeding!
setup$lookup
# set to 1 if you want ot check the intensity curves for every tile, should be done to find positions with problems.
TileScreen=1
# set desired data range & tiles to exclude
#number of timepoints to use for analysis
setup$slices=1:9
# Tiles to exclude from analysis (usually based on screen tiles)
#setup$Set2NA<-as.factor(c("B03a","B03b","B03c","B03d","E06a","E06b","E06c","E06d","E07a","E07b","E07c","E07d","F02d","F03a","F05a","F05b","F05c","F05d","F07a","F10c","F11a","F11b","F11d","G03b","G03d","G08c","G11a","H03d","H05b","H10a","H10b","H10c","H10d"))
#setup$Set2NA<-as.factor(c("A09c","B01A","CO1b","C02a","D05a"))
setup$Set2NA<-as.factor(c("C03d","D03d","D09a","D10d","E05d","E06c","E07d","G04d","G06b"))
# runs the code
source(setup$code,echo=TRUE,local=TRUE)
# warnings during plotting are normal, as are errors during Km calculation (if the data really doesn't fit the Monod curve the solution won't converge)
#saves the Results
Example1<-Result
''
#
#Bjorn's porion of Code
{
###########		Values/Settings shared by all experiments	############################
# need to have the following R packages+dependencies installed: plyr, zoo, ggplot2, drc
#	option to plot/calculate replicates individually or averaged
#  don't use R studio, it throws up plotting errors
# Open bioact3 output and make sure all columns are in "number" not "scientific" format
require(zoo); require(plyr); require(ggplot2); require(drc);
################	Experiment 1 	#########################
setup<-NULL #initialize the setup object
# Location of the Km analysis code, make sure the path is correct for YOU (different on different machines)
#for Mac
#setup$code=c("/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/KmAnalysis_v4.0.R")
# for PC
setup$code=c("X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/20150901_KmAnalysis_v4.0.R")
# working directory containing bioact3 output, can be set individually, make sure the path is correct for YOU!
#for Mac
#setup$wd="/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/ExampleData"
#for PC
setup$wd="X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/"
setwd(setup$wd)
# nutrient being used (shows up in graphs & file names)
setup$nutr="Met"
# length of prestarvation (shows up in graphs & file names)
setup$prestarve="3hPrestarve"
# number of timepoints used for linear model window
setup$n=4
# fraction of maximum intensity for which to consider using the data, currently only used for "individual" or fixed window methods
setup$p=1.0
# Options:
#	"maximum" finds maximum growth rate,
#	"individual" finds lowest residual window for each strain/conc combo,
#	"overall" finds window with lowest residuals for all strains at a given concentration (makes sure growth rate is predicted in the same time window.
#	If you set method to number 5, all windows start at that time-point with length n
setup$method="maximum"
#set of high contrast color pairs (maximum of 12), Colors will be assigned to strains in the order listed (e.g. WY2218 will be chartreuse2)
setup$colors=c("salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1","deeppink3","grey48","black","darkorange","darkorange3",'darkred','orange','navyblue','darkgreen',"salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1")
setup$cellsperwell=1000 #not actually used in the code but gets stored with all the other settings
setup$microscope="broadway" #  shows up in graphs and filenames
setup$date="20150901" #shows up in graphs and filenames
setup$infile="./bioact_results.txt" # tab delimited bioact3 textfile (code looks for columns labeled "position","slice","min.elapsed","expTcorr_bs_intden") Open in excel once to chance all values from scientific to numbers.
# Or read it in from a tab delimited text file in the working directory with columns position, strain, conc, & rep
# strains will be plotted in the order listed here
setup$lookup<-read.delim("./20150901_lookup.txt")
# Make sure your lookup table is correct before proceeding!
setup$lookup
# set to 1 if you want ot check the intensity curves for every tile, should be done to find positions with problems.
TileScreen=1
# set desired data range & tiles to exclude
#number of timepoints to use for analysis
setup$slices=1:9
# Tiles to exclude from analysis (usually based on screen tiles)
#setup$Set2NA<-as.factor(c("B03a","B03b","B03c","B03d","E06a","E06b","E06c","E06d","E07a","E07b","E07c","E07d","F02d","F03a","F05a","F05b","F05c","F05d","F07a","F10c","F11a","F11b","F11d","G03b","G03d","G08c","G11a","H03d","H05b","H10a","H10b","H10c","H10d"))
#setup$Set2NA<-as.factor(c("A09c","B01A","CO1b","C02a","D05a"))
setup$Set2NA<-as.factor(c("C03d","D03d","D09a","D10d","E05d","E06c","E07d","G04d","G06b"))
# runs the code
source(setup$code,echo=TRUE,local=TRUE)
# warnings during plotting are normal, as are errors during Km calculation (if the data really doesn't fit the Monod curve the solution won't converge)
#saves the Results
Example1<-Result
#Bjorn's porion of Code
{
###########		Values/Settings shared by all experiments	############################
# need to have the following R packages+dependencies installed: plyr, zoo, ggplot2, drc
#	option to plot/calculate replicates individually or averaged
#  don't use R studio, it throws up plotting errors
# Open bioact3 output and make sure all columns are in "number" not "scientific" format
require(zoo); require(plyr); require(ggplot2); require(drc);
################	Experiment 1 	#########################
setup<-NULL #initialize the setup object
# Location of the Km analysis code, make sure the path is correct for YOU (different on different machines)
#for Mac
#setup$code=c("/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/KmAnalysis_v4.0.R")
# for PC
setup$code=c("X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/20150901_KmAnalysis_v4.0.R")
# working directory containing bioact3 output, can be set individually, make sure the path is correct for YOU!
#for Mac
#setup$wd="/Volumes/fh/shougroup/_Biology_Protocols/Yeast/Km_StarvationToleranceAssay/AnalysisCode/ExampleData"
#for PC
setup$wd="X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/"
setwd(setup$wd)
# nutrient being used (shows up in graphs & file names)
setup$nutr="Met"
# length of prestarvation (shows up in graphs & file names)
setup$prestarve="3hPrestarve"
# number of timepoints used for linear model window
setup$n=4
# fraction of maximum intensity for which to consider using the data, currently only used for "individual" or fixed window methods
setup$p=1.0
# Options:
#	"maximum" finds maximum growth rate,
#	"individual" finds lowest residual window for each strain/conc combo,
#	"overall" finds window with lowest residuals for all strains at a given concentration (makes sure growth rate is predicted in the same time window.
#	If you set method to number 5, all windows start at that time-point with length n
setup$method="maximum"
#set of high contrast color pairs (maximum of 12), Colors will be assigned to strains in the order listed (e.g. WY2218 will be chartreuse2)
setup$colors=c("salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1","deeppink3","grey48","black","darkorange","darkorange3",'darkred','orange','navyblue','darkgreen',"salmon","red","chartreuse2","chartreuse4","dodgerblue","blue","deeppink1")
setup$cellsperwell=1000 #not actually used in the code but gets stored with all the other settings
setup$microscope="broadway" #  shows up in graphs and filenames
setup$date="20150901" #shows up in graphs and filenames
setup$infile="./bioact_results.txt" # tab delimited bioact3 textfile (code looks for columns labeled "position","slice","min.elapsed","expTcorr_bs_intden") Open in excel once to chance all values from scientific to numbers.
# Or read it in from a tab delimited text file in the working directory with columns position, strain, conc, & rep
# strains will be plotted in the order listed here
setup$lookup<-read.delim("./20150901_lookup.txt")
# Make sure your lookup table is correct before proceeding!
setup$lookup
# set to 1 if you want ot check the intensity curves for every tile, should be done to find positions with problems.
TileScreen=1
# set desired data range & tiles to exclude
#number of timepoints to use for analysis
setup$slices=1:9
# Tiles to exclude from analysis (usually based on screen tiles)
#setup$Set2NA<-as.factor(c("B03a","B03b","B03c","B03d","E06a","E06b","E06c","E06d","E07a","E07b","E07c","E07d","F02d","F03a","F05a","F05b","F05c","F05d","F07a","F10c","F11a","F11b","F11d","G03b","G03d","G08c","G11a","H03d","H05b","H10a","H10b","H10c","H10d"))
#setup$Set2NA<-as.factor(c("A09c","B01A","CO1b","C02a","D05a"))
setup$Set2NA<-as.factor(c("C03d","D03d","D09a","D10d","E05d","E06c","E07d","G04d","G06b"))
# runs the code
source(setup$code,echo=TRUE,local=TRUE)
# warnings during plotting are normal, as are errors during Km calculation (if the data really doesn't fit the Monod curve the solution won't converge)
#saves the Results
Example1<-Result
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/Niche Assessment/2015-08-03/2015-08-12_AllSampleQuantification/20150901_Example_KmDataSetup.R')
require(doSNOW)
require(plotrix)
install.packages('X:/fast/shou_w/shougroup/Code/BATMAN/batman_1.2.1.03.tar.gz',repos=NULL,type='source')
install.packages('X:/fast/shou_w/shougroup/Code/BATMAN/batman_1.2.1.03.tar.gz')
install.packages('X:/fast/shou_w/shougroup/Code/BATMAN/batman_1.2.1.03.tar.gz',type='source')
install.packages("batman", repos="http://R-Forge.R-project.org")
install.packages("batman", repos="http://R-Forge.R-project.org")
install.packages("batman", repos="http://R-Forge.R-project.org")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/Github_Repos/Metabolomics/test_batman.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/Github_Repos/Metabolomics/test_batman.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/Github_Repos/Metabolomics/test_batman.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/Github_Repos/Metabolomics/test_batman.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/Github_Repos/Metabolomics/test_batman.R')
install.packages('ffanalytics')
install.packages('Rcpp')
require(drc)
install.packages('pbkrtest',dependencies = TRUE)
require(plyr); require(ggplot2); require(zoo); require(drc);
source("http://bioconductor.org/workflows.R")
workflowInstall("rnaseqGene")
BiocUpgrade
BiocUpgrade()
?BiocUpgrade
biocLite("BiocUpgrade")
library('airwaves')
library("airway")
workflowInstall("rnaseqGene")
source("http://bioconductor.org/workflows.R")
workflowInstall("rnaseqGene")
## ----style, echo=FALSE, message=FALSE, warning=FALSE, results="asis"-----
library("BiocStyle")
library("knitr")
library("rmarkdown")
options(width=100)
opts_chunk$set(message=FALSE, error=FALSE, warning=FALSE,
cache=TRUE,
fig.width=5, fig.height=5)
## ------------------------------------------------------------------------
library("airway")
install.packages('airway')
biocLite("airway")
workflowInstall("rnaseqGene")
## ----style, echo=FALSE, message=FALSE, warning=FALSE, results="asis"-----
library("BiocStyle")
library("knitr")
library("rmarkdown")
options(width=100)
opts_chunk$set(message=FALSE, error=FALSE, warning=FALSE,
cache=TRUE,
fig.width=5, fig.height=5)
## ------------------------------------------------------------------------
library("airway")
## ------------------------------------------------------------------------
dir <- system.file("extdata", package="airway", mustWork=TRUE)
## ------------------------------------------------------------------------
list.files(dir)
csvfile <- file.path(dir,"sample_table.csv")
(sampleTable <- read.csv(csvfile,row.names=1))
sampleTable
r<-read.table('X:/fast/shou_w/ExpressionAnalysis/Temp/temp.txt',header=T)
r<-read.table('X:/fast/shou_w/ExpressionAnalysis/Temp/temp.txt',header=T,sep='\t')
head(r)
ncol(r)
ncol(c)
#http://downloads.yeastgenome.org/expression/microarray/Saldanha_2004_PMID_15240820/2010.Saldanha04_UraSulPhoLeuComp.flt.knn.avg.pcl
r<-read.table('X:/fast/shou_w/ExpressionAnalysis/Temp/temp.txt',header=T,sep='\t')
#get Gex1 only
r<-r[whic(r$YORF=='YCL073C'),]
#http://downloads.yeastgenome.org/expression/microarray/Saldanha_2004_PMID_15240820/2010.Saldanha04_UraSulPhoLeuComp.flt.knn.avg.pcl
r<-read.table('X:/fast/shou_w/ExpressionAnalysis/Temp/temp.txt',header=T,sep='\t')
#get Gex1 only
r<-r[which(r$YORF=='YCL073C'),]
r
## ----style, echo=FALSE, message=FALSE, warning=FALSE, results="asis"-----
library("BiocStyle")
library("knitr")
library("rmarkdown")
options(width=100)
opts_chunk$set(message=FALSE, error=FALSE, warning=FALSE,
cache=TRUE,
fig.width=5, fig.height=5)
## ------------------------------------------------------------------------
library("airway")
## ------------------------------------------------------------------------
dir <- system.file("extdata", package="airway", mustWork=TRUE)
## ------------------------------------------------------------------------
list.files(dir)
csvfile <- file.path(dir,"sample_table.csv")
(sampleTable <- read.csv(csvfile,row.names=1))
filenames <- file.path(dir, paste0(sampleTable$Run, "_subset.bam"))
file.exists(filenames)
?paste0
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
library("BiocStyle")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
biocLite("BiocStyle")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
biocLite("Rsamtools")
seqinfo(bamfiles)
seqinfo(bamfiles[1])
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
seqinfo(bamfiles[1])
seqinfo(bamfiles)
filenames
dir
biocLite("GenomicFeatures")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
gtffile
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
txdb
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
ebg
biocLite("GenomicAlignments")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
biocLite("GenomicAlignments")
library("GenomicAlignments")
biocLite("GenomicAlignments")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Notebook/CoSMO Auxotrophs/RNAQuant/Airwave_Training/2016-11-28_Airway.R')
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicAlignments")
se <- summarizeOverlaps(features=ebg, reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
library("GenomicAlignments")
remove.packages("GenomicAlignments")
remove.packages("GenomicAlignments")
?GenomicAlignments
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicAlignments")
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicAlignments")
library("GenomicAlignments")
install.packages('C:\Users\rjgreen\AppData\Local\Temp\RtmpKce7f3\downloaded_packages\GenomicAlignments_1.10.0.zip',repos=NULL,type='source')
source("https://bioconductor.org/biocLite.R")
source('X:/fast/shou_w/shougroup/lab_users/Robin/Robin_Code/blackjack/plot_blackjack_histogram.R')
?for
?
install.packages('twitteR')
install.packages('twitteR',dependencies = TRUE)
